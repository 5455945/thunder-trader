project(arbitrage_future)
if(CMAKE_SYSTEM_NAME MATCHES "Linux")
    message(${PROJECT_SOURCE_DIR})
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,-Bsymbolic")
    set(BOOST_THREAD "boost_thread-mt")
else()
    set(BOOST_THREAD "boost_thread")
endif()
#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
#set(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb -std=c++11 -fno-strict-aliasing")
#set(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall -std=c++11 -fno-strict-aliasing")
#set(CMAKE_BUILD_TYPE "Release")

message("[${PROJECT_NAME}]project source dir: ${PROJECT_SOURCE_DIR}")
message("[${PROJECT_NAME}]libs: ${libs}")

add_library(arbitrage_future SHARED "${PROJECT_SOURCE_DIR}/arbitrage_future.cpp" "${PROJECT_SOURCE_DIR}/../arbitrage_base_future.cpp")
target_link_libraries(arbitrage_future ${libs})
install (TARGETS arbitrage_future DESTINATION bin)
